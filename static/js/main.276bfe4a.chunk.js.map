{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Newit.js","components/NewitFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","code","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Newit","newitObj","isOwner","editing","setEditing","text","newNewit","setNewNewit","onDeleteClick","window","confirm","deleteDoc","doc","id","deleteObject","ref","attachmentURL","toggleEditing","updateDoc","autoFocus","src","alt","faTrash","faPencilAlt","NewitFactory","userObj","newit","setNewit","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","uploadFile","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","newits","setNewits","getnewits","getDocs","forEach","newitObject","useEffect","collectionQuery","query","orderBy","onSnapshot","snapshot","newitsArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","paht","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","Object","assign","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.276bfe4a.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n// app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\ninitializeApp(firebaseConfig);\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\n\r\n// const inputStyles = {}; \r\n// 이건 왜 추가했을까???\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let data;\r\n    try {\r\n      if (newAccount) {\r\n        //create account\r\n        data = await createUserWithEmailAndPassword( authService, email, password );\r\n      } else {\r\n        //Log in\r\n        data = await signInWithEmailAndPassword( authService, email, password );\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.code);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount}  className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import { authService } from \"fbase\";\r\nimport React from \"react\";\r\nimport {\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new GithubAuthProvider();\r\n    }\r\n    await signInWithPopup(authService, provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { deleteDoc, doc, updateDoc } from '@firebase/firestore'\r\nimport { deleteObject,ref } from '@firebase/storage';\r\nimport { dbService, storageService } from 'fbase'\r\nimport React, {useState} from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Newit = ({newitObj,isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNewit, setNewNewit] = useState(newitObj.text);\r\n    const onDeleteClick = async () =>{\r\n        const ok = window.confirm(\"진짜로 이 newit을 삭제하시겠습니까?\")\r\n        if(ok){\r\n            // await dbService.doc(`gnweets/${nweetObj.id}`).delete();\r\n            await deleteDoc(doc(dbService,`newits/${newitObj.id}`))\r\n            await deleteObject(ref(storageService, newitObj.attachmentURL));\r\n        }\r\n\r\n    }\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        console.log(newitObj, newNewit);\r\n        await updateDoc(doc(dbService, `newits/${newitObj.id}`),{text: newNewit,})\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n          target: { value },\r\n        } = event;\r\n        setNewNewit(value);\r\n    }\r\n    return (\r\n      <div className=\"nweet\">\r\n        {editing ? (\r\n          <>\r\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Edit your newit\"\r\n                value={newNewit}\r\n                required\r\n                autoFocus\r\n                onChange={onChange}\r\n                className=\"formInput\"\r\n              />\r\n              <input type=\"submit\" value=\"수정\" className=\"formBtn\" />\r\n            </form>\r\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n              Cancel\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h4>{newitObj.text}</h4>\r\n            {newitObj.attachmentURL && <img src={newitObj.attachmentURL} alt=\"profile\" />}\r\n            {isOwner && (\r\n              <div className=\"nweet__actions\">\r\n                <span onClick={onDeleteClick}>\r\n                  <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                  <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Newit;","import React, {useState} from 'react'\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { uploadString, ref, getDownloadURL } from \"@firebase/storage\";\r\nimport { collection, addDoc } from \"@firebase/firestore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NewitFactory = ({userObj}) => {\r\n    const [newit, setNewit] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\"); //5.0 파일 업로드를 하지 않고 텍스트만 업로드 할 때 에러나지 않도록 수정\r\n  \r\n    const onSubmit = async (event) => {\r\n        if (newit === \"\") {\r\n            return;\r\n          }\r\n        event.preventDefault();\r\n        let attachmentURL = \"\";\r\n        if (attachment !== \"\") {\r\n          const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n          const uploadFile = await uploadString(\r\n            attachmentRef,\r\n            attachment,\r\n            \"data_url\"\r\n          );\r\n          attachmentURL = await getDownloadURL(uploadFile.ref);\r\n        }\r\n        const newitObj = {\r\n          text: newit,\r\n          createdAt: Date.now(),\r\n          creatorId: userObj.uid,\r\n          attachmentURL,\r\n        };\r\n    \r\n        await addDoc(collection(dbService, \"newits\"), newitObj);\r\n        setNewit(\"\");\r\n        setAttachment(\"\");\r\n      };\r\n      const onChange = (event) => {\r\n        const {\r\n          target: { value },\r\n        } = event;\r\n        setNewit(value);\r\n      };\r\n      const onFileChange = (event) => {\r\n        const {\r\n          target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n          const {\r\n            currentTarget: { result },\r\n          } = finishedEvent;\r\n          setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n      };\r\n    \r\n      const onClearAttachment = () => setAttachment(\"\");\r\n      \r\n    return (\r\n      <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n          <input\r\n            className=\"factoryInput__input\"\r\n            value={newit}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"무슨 일이 일어나고 있나요?\"\r\n            maxLength={140}\r\n          />\r\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n        <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n          id=\"attach-file\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onFileChange}\r\n          style={{\r\n            opacity: 0,\r\n          }}\r\n        />\r\n\r\n        {attachment && (\r\n          <div className=\"factoryForm__attachment\">\r\n            <img\r\n              src={attachment}\r\n              style={{\r\n                backgroundImage: attachment,\r\n              }}\r\n              alt=\"profile\"\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n              <span>업로드 취소</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </form>\r\n    );\r\n}\r\nexport default NewitFactory;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  onSnapshot,\r\n  query,\r\n  orderBy,\r\n} from \"@firebase/firestore\";\r\nimport { dbService } from \"fbase\";\r\nimport Newit from \"components/Newit\";\r\nimport NewitFactory from \"components/NewitFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [newits, setNewits] = useState([]);\r\n  const getnewits = async () => {\r\n    const querySnapshot = await getDocs(collection(dbService, \"newits\"));\r\n    querySnapshot.forEach((doc) => {\r\n      const newitObject = {\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      };\r\n      setNewits((prev) => [newitObject, ...prev]);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getnewits();\r\n    const collectionQuery = query(\r\n      collection(dbService, \"newits\"),\r\n      orderBy(\"createdAt\", \"desc\")\r\n    );\r\n    onSnapshot(collectionQuery, (snapshot) => {\r\n      const newitsArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNewits(newitsArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <NewitFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {newits.map((newit) => (\r\n          <Newit\r\n            key={newit.id}\r\n            newitObj={newit}\r\n            isOwner={newit.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import { updateProfile } from \"@firebase/auth\";\r\nimport { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(userObj, {\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display Name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n      <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link></li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        <>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact paht=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    onAuthStateChanged(authService, (user) => {\r\n      if (user) {\r\n        setUserObj(user);\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj(Object.assign({}, user));\r\n    // setUserObj({...user});\r\n    // setUserObj(user);\r\n  }\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n        \"Initializing...\"\r\n      )}\r\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"components/App\";\r\nimport \"./style.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}